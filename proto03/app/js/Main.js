var Main, main,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

main = null;

Main = (function() {
  Main.prototype.dt = 0;

  Main.prototype.lastTime = 0;

  Main.prototype.pause = false;

  function Main() {
    this.resize = __bind(this.resize, this);
    this.update = __bind(this.update, this);
    this.pause = false;
    this.lastTime = Date.now();
    window.focus();
    if (window.PIXI) {
      Stage2d.init({
        transparent: true,
        antialias: false,
        background: 0xFF0000
      });
    }
    if (window.THREE) {
      Stage3d.init({
        transparent: false,
        antialias: false,
        background: 0xFFFFFF
      });
    }
    SceneTraveler.to(new MainScene());
    requestAnimationFrame(this.update);
    return;
  }

  Main.prototype.update = function() {
    var dt, t;
    t = Date.now();
    dt = t - this.lastTime;
    this.lastTime = t;
    if (this.pause) {
      return;
    }
    SceneTraveler.update(dt);
    if (window.PIXI) {
      Stage2d.render();
    }
    if (window.THREE) {
      Stage3d.render();
    }
    requestAnimationFrame(this.update);
  };

  Main.prototype.resize = function() {
    var height, width;
    width = window.innerWidth;
    height = window.innerHeight;
    SceneTraveler.resize();
    Stage3d.resize();
  };

  return Main;

})();

document.addEventListener('DOMContentLoaded', function() {
  main = new Main();
  window.onblur = function(e) {
    main.pause = true;
    cancelAnimationFrame(main.update);
  };
  window.onfocus = function() {
    requestAnimationFrame(main.update);
    main.lastTime = Date.now();
    main.pause = false;
  };
  window.onresize = function() {
    main.resize();
  };
});

//# sourceMappingURL=data:application/json;base64,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QUEsQ0FBcUIsSUFBSSxDQUFDLE1BQTFCLENBREEsQ0FEZTtFQUFBLENBRmhCLENBQUE7QUFBQSxFQU9BLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLFNBQUEsR0FBQTtBQUNoQixJQUFBLHFCQUFBLENBQXNCLElBQUksQ0FBQyxNQUEzQixDQUFBLENBQUE7QUFBQSxJQUNBLElBQUksQ0FBQyxRQUFMLEdBQWdCLElBQUksQ0FBQyxHQUFMLENBQUEsQ0FEaEIsQ0FBQTtBQUFBLElBRUEsSUFBSSxDQUFDLEtBQUwsR0FBYSxLQUZiLENBRGdCO0VBQUEsQ0FQakIsQ0FBQTtBQUFBLEVBYUEsTUFBTSxDQUFDLFFBQVAsR0FBa0IsU0FBQSxHQUFBO0FBQ2pCLElBQUEsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUFBLENBRGlCO0VBQUEsQ0FibEIsQ0FENkM7QUFBQSxDQUE5QyxDQXJEQSxDQUFBIiwiZmlsZSI6Ik1haW4uanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyIjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBHbG9iYWwgdmFyXG5cbm1haW4gPSBudWxsXG5cbiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIENsYXNzIE1haW5cblxuY2xhc3MgTWFpblxuXG5cdGR0IFx0XHRcdFx0OiAwXG5cdGxhc3RUaW1lIFx0XHQ6IDBcblx0cGF1c2UgXHRcdFx0OiBmYWxzZVxuXG5cdGNvbnN0cnVjdG9yOigpLT5cblx0XHRAcGF1c2UgPSBmYWxzZVxuXHRcdEBsYXN0VGltZSA9IERhdGUubm93KClcblx0XHR3aW5kb3cuZm9jdXMoKVxuXHRcdGlmIHdpbmRvdy5QSVhJXG5cdFx0XHRTdGFnZTJkLmluaXQoe3RyYW5zcGFyZW50OnRydWUsYW50aWFsaWFzOmZhbHNlLCBiYWNrZ3JvdW5kOjB4RkYwMDAwfSlcblx0XHRpZiB3aW5kb3cuVEhSRUVcblx0XHRcdFN0YWdlM2QuaW5pdCh7dHJhbnNwYXJlbnQ6ZmFsc2UsYW50aWFsaWFzOmZhbHNlLCBiYWNrZ3JvdW5kOjB4RkZGRkZGfSlcblx0XHRcblx0XHRTY2VuZVRyYXZlbGVyLnRvKCBuZXcgTWFpblNjZW5lKCkgKVxuXHRcdFxuXHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZSggQHVwZGF0ZSApXG5cdFx0cmV0dXJuXG5cblx0dXBkYXRlOigpPT5cblx0XHR0ID0gRGF0ZS5ub3coKVxuXHRcdGR0ID0gdCAtIEBsYXN0VGltZVxuXHRcdEBsYXN0VGltZSA9IHRcblxuXHRcdGlmIEBwYXVzZSB0aGVuIHJldHVyblxuXG5cdFx0IyB1cGRhdGUgbG9naWMgaGVyZVxuXHRcdFNjZW5lVHJhdmVsZXIudXBkYXRlKGR0KVxuXHRcdFxuXHRcdCMgcmVuZGVyIGZyYW1lXG5cdFx0aWYgd2luZG93LlBJWElcblx0XHRcdFN0YWdlMmQucmVuZGVyKClcblx0XHRpZiB3aW5kb3cuVEhSRUVcblx0XHRcdFN0YWdlM2QucmVuZGVyKClcblxuXHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZSggQHVwZGF0ZSApXG5cdFx0cmV0dXJuXG5cblx0cmVzaXplOigpPT5cblx0XHR3aWR0aCBcdD0gd2luZG93LmlubmVyV2lkdGhcblx0XHRoZWlnaHQgXHQ9IHdpbmRvdy5pbm5lckhlaWdodFxuXHRcdFNjZW5lVHJhdmVsZXIucmVzaXplKClcblx0XHRTdGFnZTNkLnJlc2l6ZSgpXG5cdFx0cmV0dXJuXG5cblxuIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gb24gRG9jdW1lbnQgUmVhZHlcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpLT5cblx0bWFpbiA9IG5ldyBNYWluKClcblx0XG5cdHdpbmRvdy5vbmJsdXIgPSAoZSktPlxuXHRcdG1haW4ucGF1c2UgPSB0cnVlXG5cdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUobWFpbi51cGRhdGUpXG5cdFx0cmV0dXJuXG5cblx0d2luZG93Lm9uZm9jdXMgPSAoKS0+XG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKG1haW4udXBkYXRlKVxuXHRcdG1haW4ubGFzdFRpbWUgPSBEYXRlLm5vdygpXG5cdFx0bWFpbi5wYXVzZSA9IGZhbHNlXG5cdFx0cmV0dXJuXG5cblx0d2luZG93Lm9ucmVzaXplID0gKCktPlxuXHRcdG1haW4ucmVzaXplKClcblx0XHRyZXR1cm5cblxuXHRyZXR1cm5cbikiXX0=