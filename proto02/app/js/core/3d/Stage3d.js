var Stage3d;

Stage3d = (function() {
  function Stage3d() {}

  Stage3d.camera = null;

  Stage3d.cameraTarget = null;

  Stage3d.scene = null;

  Stage3d.renderer = null;

  Stage3d.init = function(options) {
    var antialias, h, transparent, w;
    w = window.innerWidth;
    h = window.innerHeight;
    this.camera = new THREE.PerspectiveCamera(45, w / h, 1, 10000);
    this.camera.position.set(0, 20, 100);
    this.scene = new THREE.Scene();
    transparent = options.transparent || false;
    antialias = options.antialias || false;
    this.renderer = new THREE.WebGLRenderer({
      alpha: transparent,
      antialias: antialias
    });
    this.renderer.setSize(w, h);
    document.body.appendChild(this.renderer.domElement);
  };

  Stage3d.add = function(obj) {
    this.scene.add(obj);
  };

  Stage3d.remove = function(obj) {
    this.scene.remove(obj);
  };

  Stage3d.render = function() {
    this.camera.lookAt(new THREE.Vector3(0, this.camera.position.y - 20, 0));
    Stage3d.renderer.render(this.scene, this.camera);
  };

  Stage3d.resize = function() {
    if (this.renderer) {
      this.camera.aspect = window.innerWidth / window.innerHeight;
      this.camera.updateProjectionMatrix();
      this.renderer.setSize(window.innerWidth, window.innerHeight);
    }
  };

  return Stage3d;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvM2QvU3RhZ2UzZC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsSUFBQSxPQUFBOztBQUFBO3VCQUVDOztBQUFBLEVBQUEsT0FBQyxDQUFBLE1BQUQsR0FBVSxJQUFWLENBQUE7O0FBQUEsRUFDQSxPQUFDLENBQUEsWUFBRCxHQUFnQixJQURoQixDQUFBOztBQUFBLEVBRUEsT0FBQyxDQUFBLEtBQUQsR0FBUyxJQUZULENBQUE7O0FBQUEsRUFHQSxPQUFDLENBQUEsUUFBRCxHQUFZLElBSFosQ0FBQTs7QUFBQSxFQUtBLE9BQUMsQ0FBQSxJQUFELEdBQVEsU0FBQyxPQUFELEdBQUE7QUFDUCxRQUFBLDRCQUFBO0FBQUEsSUFBQSxDQUFBLEdBQUksTUFBTSxDQUFDLFVBQVgsQ0FBQTtBQUFBLElBQ0EsQ0FBQSxHQUFJLE1BQU0sQ0FBQyxXQURYLENBQUE7QUFBQSxJQUdBLElBQUMsQ0FBQSxNQUFELEdBQWMsSUFBQSxLQUFLLENBQUMsaUJBQU4sQ0FBeUIsRUFBekIsRUFBNkIsQ0FBQSxHQUFJLENBQWpDLEVBQW9DLENBQXBDLEVBQXVDLEtBQXZDLENBSGQsQ0FBQTtBQUFBLElBSUEsSUFBQyxDQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBakIsQ0FBcUIsQ0FBckIsRUFBdUIsRUFBdkIsRUFBMEIsR0FBMUIsQ0FKQSxDQUFBO0FBQUEsSUFNQSxJQUFDLENBQUEsS0FBRCxHQUFhLElBQUEsS0FBSyxDQUFDLEtBQU4sQ0FBQSxDQU5iLENBQUE7QUFBQSxJQVFBLFdBQUEsR0FBYyxPQUFPLENBQUMsV0FBUixJQUFxQixLQVJuQyxDQUFBO0FBQUEsSUFTQSxTQUFBLEdBQVksT0FBTyxDQUFDLFNBQVIsSUFBbUIsS0FUL0IsQ0FBQTtBQUFBLElBV0EsSUFBQyxDQUFBLFFBQUQsR0FBZ0IsSUFBQSxLQUFLLENBQUMsYUFBTixDQUFvQjtBQUFBLE1BQUMsS0FBQSxFQUFNLFdBQVA7QUFBQSxNQUFtQixTQUFBLEVBQVUsU0FBN0I7S0FBcEIsQ0FYaEIsQ0FBQTtBQUFBLElBWUEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxPQUFWLENBQW1CLENBQW5CLEVBQXNCLENBQXRCLENBWkEsQ0FBQTtBQUFBLElBY0EsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFkLENBQTBCLElBQUMsQ0FBQSxRQUFRLENBQUMsVUFBcEMsQ0FkQSxDQURPO0VBQUEsQ0FMUixDQUFBOztBQUFBLEVBdUJBLE9BQUMsQ0FBQSxHQUFELEdBQU8sU0FBQyxHQUFELEdBQUE7QUFDTixJQUFBLElBQUMsQ0FBQSxLQUFLLENBQUMsR0FBUCxDQUFXLEdBQVgsQ0FBQSxDQURNO0VBQUEsQ0F2QlAsQ0FBQTs7QUFBQSxFQTJCQSxPQUFDLENBQUEsTUFBRCxHQUFVLFNBQUMsR0FBRCxHQUFBO0FBQ1QsSUFBQSxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQVAsQ0FBYyxHQUFkLENBQUEsQ0FEUztFQUFBLENBM0JWLENBQUE7O0FBQUEsRUErQkEsT0FBQyxDQUFBLE1BQUQsR0FBVSxTQUFBLEdBQUE7QUFDVCxJQUFBLElBQUMsQ0FBQSxNQUFNLENBQUMsTUFBUixDQUFtQixJQUFBLEtBQUssQ0FBQyxPQUFOLENBQWMsQ0FBZCxFQUFnQixJQUFDLENBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFqQixHQUFtQixFQUFuQyxFQUFzQyxDQUF0QyxDQUFuQixDQUFBLENBQUE7QUFBQSxJQUNBLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBakIsQ0FBd0IsSUFBQyxDQUFBLEtBQXpCLEVBQWdDLElBQUMsQ0FBQSxNQUFqQyxDQURBLENBRFM7RUFBQSxDQS9CVixDQUFBOztBQUFBLEVBb0NBLE9BQUMsQ0FBQSxNQUFELEdBQVUsU0FBQSxHQUFBO0FBQ1QsSUFBQSxJQUFHLElBQUMsQ0FBQSxRQUFKO0FBQ0MsTUFBQSxJQUFDLENBQUEsTUFBTSxDQUFDLE1BQVIsR0FBaUIsTUFBTSxDQUFDLFVBQVAsR0FBb0IsTUFBTSxDQUFDLFdBQTVDLENBQUE7QUFBQSxNQUNBLElBQUMsQ0FBQSxNQUFNLENBQUMsc0JBQVIsQ0FBQSxDQURBLENBQUE7QUFBQSxNQUVBLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFtQixNQUFNLENBQUMsVUFBMUIsRUFBc0MsTUFBTSxDQUFDLFdBQTdDLENBRkEsQ0FERDtLQURTO0VBQUEsQ0FwQ1YsQ0FBQTs7aUJBQUE7O0lBRkQsQ0FBQSIsImZpbGUiOiJjb3JlLzNkL1N0YWdlM2QuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyIjIFxuIyBTdGFnZTNkIGZvciB0aHJlZS5qcyB3aXRoIGV2ZXJ5IGJhc2ljcyB5b3UgbmVlZFxuIyBAYXV0aG9yIERhdmlkIFJvbmFpIC8gTWFraW9wb2xpcy5jb20gLyBATWFraW82NCBcbiMgXG5jbGFzcyBTdGFnZTNkXG5cblx0QGNhbWVyYSA9IG51bGxcblx0QGNhbWVyYVRhcmdldCA9IG51bGxcblx0QHNjZW5lID0gbnVsbFxuXHRAcmVuZGVyZXIgPSBudWxsXG5cblx0QGluaXQgPSAob3B0aW9ucyktPlxuXHRcdHcgPSB3aW5kb3cuaW5uZXJXaWR0aFxuXHRcdGggPSB3aW5kb3cuaW5uZXJIZWlnaHRcblxuXHRcdEBjYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoIDQ1LCB3IC8gaCwgMSwgMTAwMDAgKVxuXHRcdEBjYW1lcmEucG9zaXRpb24uc2V0KDAsMjAsMTAwKVxuXG5cdFx0QHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKClcblxuXHRcdHRyYW5zcGFyZW50ID0gb3B0aW9ucy50cmFuc3BhcmVudHx8ZmFsc2Vcblx0XHRhbnRpYWxpYXMgPSBvcHRpb25zLmFudGlhbGlhc3x8ZmFsc2VcblxuXHRcdEByZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHthbHBoYTp0cmFuc3BhcmVudCxhbnRpYWxpYXM6YW50aWFsaWFzfSlcblx0XHRAcmVuZGVyZXIuc2V0U2l6ZSggdywgaCApXG5cblx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKEByZW5kZXJlci5kb21FbGVtZW50KVxuXHRcdHJldHVyblxuXG5cdEBhZGQgPSAob2JqKS0+XG5cdFx0QHNjZW5lLmFkZChvYmopXG5cdFx0cmV0dXJuXG5cblx0QHJlbW92ZSA9IChvYmopLT5cblx0XHRAc2NlbmUucmVtb3ZlKG9iailcblx0XHRyZXR1cm5cblxuXHRAcmVuZGVyID0gKCktPlxuXHRcdEBjYW1lcmEubG9va0F0KG5ldyBUSFJFRS5WZWN0b3IzKDAsQGNhbWVyYS5wb3NpdGlvbi55LTIwLDApKVxuXHRcdFN0YWdlM2QucmVuZGVyZXIucmVuZGVyKEBzY2VuZSwgQGNhbWVyYSlcblx0XHRyZXR1cm5cblxuXHRAcmVzaXplID0gKCktPlxuXHRcdGlmIEByZW5kZXJlclxuXHRcdFx0QGNhbWVyYS5hc3BlY3QgPSB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodFxuXHRcdFx0QGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KClcblx0XHRcdEByZW5kZXJlci5zZXRTaXplKCB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0IClcblx0XHRyZXR1cm4iXX0=