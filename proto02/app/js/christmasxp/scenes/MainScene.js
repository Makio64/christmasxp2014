var MainScene,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

MainScene = (function(_super) {
  __extends(MainScene, _super);

  function MainScene() {
    this.generateDiamond = __bind(this.generateDiamond, this);
    this.onDiamondLoad = __bind(this.onDiamondLoad, this);
    var loader;
    this.time = 0;
    this.useMap = true;
    this.shading = THREE.FlatShading;
    this.opacity = 1;
    this.container = new THREE.Object3D();
    this.container.position.y -= 10;
    Stage3d.add(this.container);
    this.ambientLight = new THREE.AmbientLight(0x222222);
    Stage3d.add(this.ambientLight);
    this.cameraLight = new THREE.PointLight(0xffffff, 1, 400);
    this.cameraLight.position.set(30, 50, 50);
    Stage3d.add(this.cameraLight);
    loader = new THREE.JSONLoader();
    loader.load('./3d/json/crystal.js', this.onDiamondLoad);
    this.map = THREE.ImageUtils.loadTexture("./3d/textures/preview01.jpg");
    return;
  }

  MainScene.prototype.onDiamondLoad = function(geometry) {
    var gui;
    this.diamondGeometry = geometry;
    this.generateDiamond();
    gui = new dat.GUI();
    gui.add(this, 'opacity', 0, 1);
    gui.add(this, 'useMap').onChange((function(_this) {
      return function(e) {
        if (_this.useMap) {
          _this.material.map = _this.map;
        } else {
          _this.material.map = null;
        }
        return _this.material.needsUpdate = true;
      };
    })(this));
    gui.add(this, 'shading', {
      smooth: THREE.SmoothShading,
      flat: THREE.FlatShading,
      none: THREE.NoShading
    }).onChange((function(_this) {
      return function(e) {
        return _this.generateDiamond();
      };
    })(this));
  };

  MainScene.prototype.generateDiamond = function() {
    var geometry;
    geometry = this.diamondGeometry.clone();
    this.computeGeometry(geometry);
    this.material = new THREE.MeshLambertMaterial({
      color: 0xffffff,
      transparent: true,
      opacity: this.opacity
    });
    if (this.useMap) {
      this.material.map = this.map;
    }
    this.material.shading = this.shading;
    this.material.side = THREE.DoubleSide;
    if (this.diamond) {
      this.container.remove(this.diamond);
    }
    this.diamond = new THREE.Mesh(geometry, this.material);
    return this.container.add(this.diamond);
  };

  MainScene.prototype.computeGeometry = function(geometry) {
    geometry.computeBoundingSphere();
    geometry.computeFaceNormals();
    geometry.computeVertexNormals();
    geometry.computeTangents();
    geometry.computeMorphNormals();
    geometry.verticesNeedUpdate = true;
    geometry.normalsNeedUpdate = true;
  };

  MainScene.prototype.update = function(dt) {
    this.time += dt;
    this.container.rotation.y += 0.005;
  };

  return MainScene;

})(Scene);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocmlzdG1hc3hwL3NjZW5lcy9NYWluU2NlbmUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsU0FBQTtFQUFBOztpU0FBQTs7QUFBQTtBQUVDLDhCQUFBLENBQUE7O0FBQVksRUFBQSxtQkFBQSxHQUFBO0FBRVgsNkRBQUEsQ0FBQTtBQUFBLHlEQUFBLENBQUE7QUFBQSxRQUFBLE1BQUE7QUFBQSxJQUFBLElBQUMsQ0FBQSxJQUFELEdBQVEsQ0FBUixDQUFBO0FBQUEsSUFDQSxJQUFDLENBQUEsTUFBRCxHQUFVLElBRFYsQ0FBQTtBQUFBLElBRUEsSUFBQyxDQUFBLE9BQUQsR0FBVyxLQUFLLENBQUMsV0FGakIsQ0FBQTtBQUFBLElBR0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxDQUhYLENBQUE7QUFBQSxJQUtBLElBQUMsQ0FBQSxTQUFELEdBQWlCLElBQUEsS0FBSyxDQUFDLFFBQU4sQ0FBQSxDQUxqQixDQUFBO0FBQUEsSUFNQSxJQUFDLENBQUEsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFwQixJQUF5QixFQU56QixDQUFBO0FBQUEsSUFPQSxPQUFPLENBQUMsR0FBUixDQUFZLElBQUMsQ0FBQSxTQUFiLENBUEEsQ0FBQTtBQUFBLElBU0EsSUFBQyxDQUFBLFlBQUQsR0FBb0IsSUFBQSxLQUFLLENBQUMsWUFBTixDQUFtQixRQUFuQixDQVRwQixDQUFBO0FBQUEsSUFVQSxPQUFPLENBQUMsR0FBUixDQUFZLElBQUMsQ0FBQSxZQUFiLENBVkEsQ0FBQTtBQUFBLElBV0EsSUFBQyxDQUFBLFdBQUQsR0FBbUIsSUFBQSxLQUFLLENBQUMsVUFBTixDQUFpQixRQUFqQixFQUEyQixDQUEzQixFQUE4QixHQUE5QixDQVhuQixDQUFBO0FBQUEsSUFZQSxJQUFDLENBQUEsV0FBVyxDQUFDLFFBQVEsQ0FBQyxHQUF0QixDQUEyQixFQUEzQixFQUErQixFQUEvQixFQUFtQyxFQUFuQyxDQVpBLENBQUE7QUFBQSxJQWFBLE9BQU8sQ0FBQyxH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QUFDQyxNQUFBLElBQUMsQ0FBQSxTQUFTLENBQUMsTUFBWCxDQUFrQixJQUFDLENBQUEsT0FBbkIsQ0FBQSxDQUREO0tBUEE7QUFBQSxJQVNBLElBQUMsQ0FBQSxPQUFELEdBQWUsSUFBQSxLQUFLLENBQUMsSUFBTixDQUFXLFFBQVgsRUFBb0IsSUFBQyxDQUFBLFFBQXJCLENBVGYsQ0FBQTtXQVVBLElBQUMsQ0FBQSxTQUFTLENBQUMsR0FBWCxDQUFlLElBQUMsQ0FBQSxPQUFoQixFQVhlO0VBQUEsQ0F2Q2hCLENBQUE7O0FBQUEsc0JBcURBLGVBQUEsR0FBZ0IsU0FBQyxRQUFELEdBQUE7QUFFZixJQUFBLFFBQVEsQ0FBQyxxQkFBVCxDQUFBLENBQUEsQ0FBQTtBQUFBLElBQ0EsUUFBUSxDQUFDLGtCQUFULENBQUEsQ0FEQSxDQUFBO0FBQUEsSUFFQSxRQUFRLENBQUMsb0JBQVQsQ0FBQSxDQUZBLENBQUE7QUFBQSxJQUdBLFFBQVEsQ0FBQyxlQUFULENBQUEsQ0FIQSxDQUFBO0FBQUEsSUFJQSxRQUFRLENBQUMsbUJBQVQsQ0FBQSxDQUpBLENBQUE7QUFBQSxJQUtBLFFBQVEsQ0FBQyxrQkFBVCxHQUE4QixJQUw5QixDQUFBO0FBQUEsSUFNQSxRQUFRLENBQUMsaUJBQVQsR0FBNkIsSUFON0IsQ0FGZTtFQUFBLENBckRoQixDQUFBOztBQUFBLHNCQWdFQSxNQUFBLEdBQU8sU0FBQyxFQUFELEdBQUE7QUFDTixJQUFBLElBQUMsQ0FBQSxJQUFELElBQVMsRUFBVCxDQUFBO0FBQUEsSUFDQSxJQUFDLENBQUEsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFwQixJQUF5QixLQUR6QixDQURNO0VBQUEsQ0FoRVAsQ0FBQTs7bUJBQUE7O0dBRnVCLE1BQXhCLENBQUEiLCJmaWxlIjoiY2hyaXN0bWFzeHAvc2NlbmVzL01haW5TY2VuZS5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE1haW5TY2VuZSBleHRlbmRzIFNjZW5lXG5cblx0Y29uc3RydWN0b3I6KCktPlxuXG5cdFx0QHRpbWUgPSAwXG5cdFx0QHVzZU1hcCA9IHRydWVcblx0XHRAc2hhZGluZyA9IFRIUkVFLkZsYXRTaGFkaW5nXG5cdFx0QG9wYWNpdHkgPSAxXG5cblx0XHRAY29udGFpbmVyID0gbmV3IFRIUkVFLk9iamVjdDNEKCk7XG5cdFx0QGNvbnRhaW5lci5wb3NpdGlvbi55IC09IDEwO1xuXHRcdFN0YWdlM2QuYWRkKEBjb250YWluZXIpXG5cblx0XHRAYW1iaWVudExpZ2h0ID0gbmV3IFRIUkVFLkFtYmllbnRMaWdodCgweDIyMjIyMilcblx0XHRTdGFnZTNkLmFkZChAYW1iaWVudExpZ2h0KVxuXHRcdEBjYW1lcmFMaWdodCA9IG5ldyBUSFJFRS5Qb2ludExpZ2h0KDB4ZmZmZmZmLCAxLCA0MDApXG5cdFx0QGNhbWVyYUxpZ2h0LnBvc2l0aW9uLnNldCggMzAsIDUwLCA1MCApO1xuXHRcdFN0YWdlM2QuYWRkKEBjYW1lcmFMaWdodClcblxuXHRcdGxvYWRlciA9IG5ldyBUSFJFRS5KU09OTG9hZGVyKClcblx0XHRsb2FkZXIubG9hZCggJy4vM2QvanNvbi9jcnlzdGFsLmpzJywgQG9uRGlhbW9uZExvYWQgKVxuXHRcdEBtYXAgPSBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKFwiLi8zZC90ZXh0dXJlcy9wcmV2aWV3MDEuanBnXCIpXG5cblx0XHRyZXR1cm5cblxuXHRvbkRpYW1vbmRMb2FkOihnZW9tZXRyeSk9PlxuXHRcdEBkaWFtb25kR2VvbWV0cnkgPSBnZW9tZXRyeVxuXHRcdEBnZW5lcmF0ZURpYW1vbmQoKVxuXG5cdFx0Z3VpID0gbmV3IGRhdC5HVUkoKVxuXHRcdGd1aS5hZGQoQCwgJ29wYWNpdHknLCAwLCAxKVxuXHRcdGd1aS5hZGQoQCwgJ3VzZU1hcCcpLm9uQ2hhbmdlKChlKT0+XG5cdFx0XHRpZiBAdXNlTWFwIHRoZW4gQG1hdGVyaWFsLm1hcCA9IEBtYXBcblx0XHRcdGVsc2UgQG1hdGVyaWFsLm1hcCA9IG51bGxcblx0XHRcdEBtYXRlcmlhbC5uZWVkc1VwZGF0ZSA9IHRydWVcblx0XHQpXG5cdFx0Z3VpLmFkZChALCAnc2hhZGluZycsIHtzbW9vdGg6VEhSRUUuU21vb3RoU2hhZGluZyxmbGF0OlRIUkVFLkZsYXRTaGFkaW5nLG5vbmU6VEhSRUUuTm9TaGFkaW5nfSkub25DaGFuZ2UoKGUpPT5cblx0XHRcdEBnZW5lcmF0ZURpYW1vbmQoKVxuXHRcdClcblx0XHRyZXR1cm5cblxuXHRnZW5lcmF0ZURpYW1vbmQ6KCk9PlxuXHRcdGdlb21ldHJ5ID0gQGRpYW1vbmRHZW9tZXRyeS5jbG9uZSgpXG5cdFx0QGNvbXB1dGVHZW9tZXRyeShnZW9tZXRyeSlcblx0XHRAbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbCh7Y29sb3I6IDB4ZmZmZmZmLCB0cmFuc3BhcmVudDp0cnVlLCBvcGFjaXR5OkBvcGFjaXR5fSlcblx0XHRpZiBAdXNlTWFwIHRoZW4gQG1hdGVyaWFsLm1hcCA9IEBtYXBcblx0XHRAbWF0ZXJpYWwuc2hhZGluZyA9IEBzaGFkaW5nXG5cdFx0QG1hdGVyaWFsLnNpZGUgPSBUSFJFRS5Eb3VibGVTaWRlXG5cblx0XHRpZihAZGlhbW9uZClcblx0XHRcdEBjb250YWluZXIucmVtb3ZlKEBkaWFtb25kKVxuXHRcdEBkaWFtb25kID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksQG1hdGVyaWFsKVxuXHRcdEBjb250YWluZXIuYWRkKEBkaWFtb25kKVxuXG5cblx0Y29tcHV0ZUdlb21ldHJ5OihnZW9tZXRyeSktPlxuXHRcdCMgY29tcHV0ZSB0aGUgbW9kZWxcblx0XHRnZW9tZXRyeS5jb21wdXRlQm91bmRpbmdTcGhlcmUoKVxuXHRcdGdlb21ldHJ5LmNvbXB1dGVGYWNlTm9ybWFscygpXG5cdFx0Z2VvbWV0cnkuY29tcHV0ZVZlcnRleE5vcm1hbHMoKVxuXHRcdGdlb21ldHJ5LmNvbXB1dGVUYW5nZW50cygpXG5cdFx0Z2VvbWV0cnkuY29tcHV0ZU1vcnBoTm9ybWFscygpXG5cdFx0Z2VvbWV0cnkudmVydGljZXNOZWVkVXBkYXRlID0gdHJ1ZVxuXHRcdGdlb21ldHJ5Lm5vcm1hbHNOZWVkVXBkYXRlID0gdHJ1ZVxuXHRcdHJldHVyblxuXG5cdHVwZGF0ZTooZHQpLT5cblx0XHRAdGltZSArPSBkdFxuXHRcdEBjb250YWluZXIucm90YXRpb24ueSArPSAwLjAwNVxuXHRcdFxuXHRcdHJldHVybiJdfQ==