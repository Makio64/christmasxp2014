var Mountain = (function(){

    function Mountain(isOccluding){
        THREE.Object3D.call(this);
        
        var terPoints = [183.8913420215249,183.12427003703482,187.86017283612907,187.9684585523993,184.2202560658527,186.5590813510202,187.78918639737535,192.2619798224098,196.27027776154912,199.8499035306104,198.88545726249896,204.04843085055202,202.8662468264407,202.54961729264397,201.96003472348946,208.48348253031864,210.47282528604316,211.39525643920547,207.49233439047617,208.65817422239624,213.39115065000982,216.51593723596557,223.65007518613254,228.08431599059395,227.18199198550423,225.9787548919379,231.47162019533036,229.43601244222958,226.42483616828602,229.3762847239669,230.70681761842795,227.66746243546095,230.29288402735054,226.30559202101355,224.0205430284197,225.3662961024547,221.69765334214145,222.847426291343,218.67452405038014,218.79650232229068,224.8284415158905,228.0816929072315,229.35819932093904,229.01117347746114,232.86455694952784,234.97812532355985,233.96911566216914,234.9938843277432,235.08936962945359,232.26251995311,232.1444522159032,230.85872683026415,234.17287685437256,229.56496721407305,228.75000901785893,224.95350431081806,223.82940932577648,224.32235570236992,221.22662243706293,226.01497098243607,223.93647398537684,224.20150561500603,226.0302620523236,226.66208702242417,223.29572404768177,226.8899805740177,230.23435477853215,234.92759792568563,237.32300739906606,236.2520635087821,236.65238372380412,238.16986513473816,240.73318449396595,242.94101569414386,245.30940448907958,248.74928303375088,245.986031698692,243.29918872950861,243.59781265951375,239.82589015304742,240.25993448156774,240.80823469963826,243.10977703165662,245.87441617642784,252.16318633474194,253.98261019855175,261.0352331673411,261.68663485336333,262.33601238612357,259.35197808312284,262.7440175615355,262.95308637893913,268.18060379026696,270.9342627421014,267.52540312798993,262.688258529194,261.8625547929831,264.99818787931514,271.1208424819301,273.03775651514184,281.3332336248237,283.13851721162246,281.6372007931925,286.75815585838996,286.71061782290025,285.83574333998075,291.79503578342167,292.7307271859847,294.42066740812214,297.44200257995925,293.79457548880373,299.25207758660713,300.05949963018884,301.02739954188894,303.76836385478765,301.8077755969088,299.9305103922269,297.000983415454,292.89575037650826,287.57589367099297,289.1809926753971,292.0443467654319,289.77651325463313,291.4264448441765,299.8813801480248,300.0639696595828,302.1308713773931,299.92383915306067,300.83178977907517,299.3516432415897,303.8737866501964,304.952667546633,302.63726294237506,297.06847947601636,295.77829716857553,297.6874202980122,296.7722178411707,294.01486487040506,293.6837956217582,286.5289871166719,285.07051804035825,282.1594461892012,281.8984674900575,284.1095289657805,283.2951405652187,280.89222221132155,285.333112071169,285.82538957389346,281.32784346879106,281.0816063235376,281.7567173212568,284.67289571694045,292.18855287477226,295.3023429020924,293.90283142126873,290.8675886812255,285.0082545182727,282.6924996569873,284.2555300448393,287.1957593778427,291.9591071481795,289.9326058492917,293.7948878858235,287.4294506127379,286.6303588868027,287.3404009173057,284.31670857404663,280.75536182623625,280.63541332566473,282.08420942755583,288.56878702754733,285.2204805838385,286.9821993459243,285.670625861723,286.43962933271376,283.0527561175027,285.6563707681586,283.4233152026622,282.91020791953474,279.10655563801384,272.37275409516525,274.49474173216356,274.17647285403785,270.41854025477653,267.72748916495607,263.62222100995183,263.133676718281,260.74433737349676,259.6267727399151,261.9964451341145,261.15981785570204,262.99920791129284,258.90709699485467,260.9614465819934,260.3572442203536,262.8303226744513,270.0256333416011,275.24140260441976,279.4782233920869,276.38276800541485,278.66017440646004,276.4208114993558,273.93154199054027,274.4170378681188,275.2174870101614,275.22813959427293,276.93003521866683,277.77770747857414,283.0398807839935,283.0780481898836,276.2604508141585,277.95778808414104,276.43354540600546,277.01768292251995,282.3509302424151,283.64594049331856,285.65037174787597,286.6614935977926,286.68096725684984,289.5011296072403,290.26622366727935,291.1759303052087,289.76438913947555,288.0646554772118,291.9444858941963,289.1034033762649,284.25889395081595,278.3698866145222,278.6475852026187,279.768874302087,281.8869772791605,278.86001853956986,275.4899309881743,273.6363228504798,273.03340292968414,272.78425913166296,277.6793550508779,278.2297393000349,274.3701712960595,275.68146809734515,273.6309060905914,268.1422984360878,269.36664549542013,268.07827476633423,266.7441681182397,266.3964010311217,270.61253354297884,268.83049983378567,272.27980107322117,278.6535121301005,278.1827052689249,277.81766954315736,281.4430578795174,279.9281758322153,276.66351708735687,275.61881789718893,279.7924263407243,277.11915309921477,279.72657008823234,278.9375669727894,277.2033594577305,273.47669081048355,276.0369699586559];

        var offset = 1;
        var sub = 100;
        var stepLength = 4;
        var shape = new THREE.Shape();
        shape.moveTo(0, terPoints[0] - sub);
        for (var i = 1, l = terPoints.length; i < l; i++) {
			shape.lineTo(offset, terPoints[i] - sub);
			offset += stepLength;
        }
        for (var i = l - 1; i > 0; i--) {
			shape.lineTo(offset, terPoints[i] - sub);
			offset += stepLength;
        }
        shape.lineTo(offset, 0);
        shape.lineTo(0, 0);
        shape.lineTo(0, terPoints[0] - sub);

        this.meshWidth = terPoints.length * stepLength * 2;

		var geometry = new THREE.ShapeGeometry(shape);
		var material;
		if(isOccluding) {
			material = new THREE.MeshBasicMaterial({
				fog: false,
				color: 0x000000
			});
		}
		else {
			this.colors = {
				top: 0x5aa9d2,
				bottom: 0x415d6c
			}

			this.uniforms = THREE.UniformsUtils.clone(MountainGradientShader.uniforms);
			this.uniforms.colorTop.value.setHex(this.colors.top);
			this.uniforms.colorBottom.value.setHex(this.colors.bottom);

			// gui.add(this.uniforms.maxheight, 'value').min(0).max(1000).name('Gradient Mountain Height');
			// gui.addColor(this.colors, 'top').listen().onChange(function(){
			// 	this.uniforms.colorTop.value.setHex(this.colors.top);
			// }.bind(this)).name('Gradient Mountain Top');
			// gui.addColor(this.colors, 'bottom').listen().onChange(function(){
			// 	this.uniforms.colorBottom.value.setHex(this.colors.bottom);
			// }.bind(this)).name('Gradient Mountain Bottom');

			material = new THREE.ShaderMaterial({
				vertexShader: MountainGradientShader.vertexShader,
				fragmentShader: MountainGradientShader.fragmentShader,
				uniforms: this.uniforms,
				fog: false
			});
		}

		

		this.mesh1 = new THREE.Mesh(geometry, material);
		this.scale.multiplyScalar(20);
		this.mesh1.position.x -= this.meshWidth * 0.5;
		
		this.mesh2 = this.mesh1.clone();
		this.mesh2.position.x = this.mesh1.position.x + this.meshWidth - 10;

		this.add(this.mesh1);
		this.add(this.mesh2);
    }

    Mountain.prototype = new THREE.Object3D;
    Mountain.prototype.constructor = Mountain;

    Mountain.prototype.update = function() {
    	this.mesh1.position.x -= 10;
    	this.mesh2.position.x -= 10;
    	if(this.mesh1.position.x < -this.meshWidth * 1.5) {
    		this.mesh1.position.x = this.mesh2.position.x + this.meshWidth - 10;
    	}
    	if(this.mesh2.position.x < -this.meshWidth * 1.5) {
    		this.mesh2.position.x = this.mesh1.position.x + this.meshWidth - 10;
    	}
    };

    return Mountain;
})();

